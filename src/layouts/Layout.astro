<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Portofolio</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
    <style>
      html, body {
        font-family: 'Inter', sans-serif;
        margin: 0;
        padding: 0;
        height: 100%;
      }

      body {
        display: flex;
        flex-direction: column;
      }

      .text-container {
        z-index: 100;
        position: relative;
      }

      :root {
        --color-bg1: rgb(108, 0, 162);
        --color-bg2: rgb(0, 17, 82);
        --color1: 18, 113, 255;
        --color2: 221, 74, 255;
        --color3: 204, 11, 147;
        --color4: 200, 50, 50;
        --color5: 59, 60, 214;
        --color-interactive: 117, 100, 255;
        --circle-size: 80%;
        --blending: hard-light;
      }

      @keyframes moveInCircle {
        0% {
          transform: rotate(0deg);
        }
        50% {
          transform: rotate(180deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      @keyframes moveVertical {
        0% {
          transform: translateY(-50%);
        }
        50% {
          transform: translateY(50%);
        }
        100% {
          transform: translateY(-50%);
        }
      }

      @keyframes moveHorizontal {
        0% {
          transform: translateX(-50%) translateY(-10%);
        }
        50% {
          transform: translateX(50%) translateY(10%);
        }
        100% {
          transform: translateX(-50%) translateY(-10%);
        }
      }

      .gradient-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        overflow: hidden;
        background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
        z-index: -1;
      }

      .gradient-bg svg {
        display: none;
      }

      .gradients-container {
        filter: url(#goo) blur(40px);
        width: 100%;
        height: 100%;
      }

      .g1, .g2, .g3, .g4, .g5, .interactive {
        position: absolute;
        mix-blend-mode: var(--blending);
        background: radial-gradient(circle at center, rgba(var(--color1), 0.8) 0, rgba(var(--color1), 0) 50%) no-repeat;
        width: var(--circle-size);
        height: var(--circle-size);
        top: calc(50% - var(--circle-size) / 2);
        left: calc(50% - var(--circle-size) / 2);
        opacity: 1;
      }

      .g1 {
        animation: moveVertical 30s ease infinite;
      }

      .g2 {
        background: radial-gradient(circle at center, rgba(var(--color2), 0.8) 0, rgba(var(--color2), 0) 50%) no-repeat;
        transform-origin: calc(50% - 400px);
        animation: moveInCircle 20s reverse infinite;
      }

      .g3 {
        background: radial-gradient(circle at center, rgba(var(--color3), 0.8) 0, rgba(var(--color3), 0) 50%) no-repeat;
        top: calc(50% - var(--circle-size) / 2 + 200px);
        left: calc(50% - var(--circle-size) / 2 - 500px);
        transform-origin: calc(50% + 400px);
        animation: moveInCircle 40s linear infinite;
      }

      .g4 {
        background: radial-gradient(circle at center, rgba(var(--color4), 0.8) 0, rgba(var(--color4), 0) 50%) no-repeat;
        transform-origin: calc(50% - 200px);
        animation: moveHorizontal 40s ease infinite;
        opacity: 0.7;
      }

      .g5 {
        background: radial-gradient(circle at center, rgba(var(--color5), 0.8) 0, rgba(var(--color5), 0) 50%) no-repeat;
        width: calc(var(--circle-size) * 2);
        height: calc(var(--circle-size) * 2);
        top: calc(50% - var(--circle-size));
        left: calc(50% - var(--circle-size));
        transform-origin: calc(50% - 800px) calc(50% + 200px);
        animation: moveInCircle 20s ease infinite;
      }

      .interactive {
        background: radial-gradient(circle at center, rgba(var(--color-interactive), 0.8) 0, rgba(var(--color-interactive), 0) 50%) no-repeat;
        width: 100%;
        height: 100%;
        top: -50%;
        left: -50%;
        opacity: 0.7;
      }
    </style>
  </head>
  <body>
    <div class="gradient-bg">
      <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
          <filter id="goo">
            <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
            <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8" result="goo" />
            <feBlend in="SourceGraphic" in2="goo" />
          </filter>
        </defs>
      </svg>
      <div class="gradients-container">
        <div class="g1"></div>
        <div class="g2"></div>
        <div class="g3"></div>
        <div class="g4"></div>
        <div class="g5"></div>
        <div class="interactive"></div>
      </div>
    </div>
    <div class="text-container">
      <slot/>
    </div>
    <script type="module">
      document.addEventListener('DOMContentLoaded', () => {
        const interBubble = document.querySelector('.interactive');
        let curX = 0;
        let curY = 0;
        let tgX = 0;
        let tgY = 0;

        function move() {
          curX += (tgX - curX) / 20;
          curY += (tgY - curY) / 20;
          interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;
          requestAnimationFrame(move);
        }

        window.addEventListener('mousemove', (event) => {
          tgX = event.clientX;
          tgY = event.clientY;
        });

        move();
      });
    </script>
  </body>
</html>
